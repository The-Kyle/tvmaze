{"version":3,"sources":["components/Search.js","components/SearchResults.js","components/ShowImage.js","components/ShowDetails.js","components/CastList.js","components/ShowDisplay.js","App.js","index.js"],"names":["Search","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","bind","assertThisInitialized","debouncedOnChange","_","debounce","event","target","value","search","onSearchChange","react_default","a","createElement","Component","SearchResults","handleClick","onSelect","_this2","searchResults","map","item","index","key","onClick","show","image","src","medium","style","width","name","border-width","margin","border-style","React","ShowImage","imgpath","original","height","ShowDetails","networkName","network","country","webChannel","premiered","type","language","status","officialSite","summary","genre","genres","join","dangerouslySetInnerHTML","__html","length","href","CastList","state","searchResultsCast","id","fetch","concat","then","res","json","setState","catch","err","console","log","display","flexDirection","cast","i","person","character","ShowDisplay","selectedSearchResult","handleCastButton","e","components_ShowImage","components_ShowDetails","components_CastList","App","handleChange","handleSearchResultSelect","fetchData","className","alt","components_Search","shows","SearchResults_SearchResults","marginLeft","components_ShowDisplay","ReactDOM","render","src_App","document","getElementById"],"mappings":"+PA4CeA,cAxCb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,SAAWP,EAAKO,SAASC,KAAdP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAChBA,EAAKU,kBAAoBC,IAAEC,SAASZ,EAAKU,kBAAkBF,KAAvBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAAmC,KAJtDA,wEAQVa,GACPV,KAAKO,kBAAkBG,EAAMC,OAAOC,iDAGpBA,GAChBZ,KAAKa,OAAOD,kCAGPA,GACLZ,KAAKJ,MAAMkB,eAAeF,oCAe1B,OACEG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAOb,SAAUJ,KAAKI,mBAnCTc,aCDAC,cACjB,SAAAA,EAAYvB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmB,IACftB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqB,GAAAhB,KAAAH,KAAMJ,KAOVwB,YAAc,SAACR,GACXf,EAAKD,MAAMyB,SAAST,IATLf,wEAYV,IAAAyB,EAAAtB,KACL,OACIe,EAAAC,EAAAC,cAAA,WACKjB,KAAKJ,MAAM2B,cAAcC,IAAI,SAACC,EAAMC,GAAP,OAC1BX,EAAAC,EAAAC,cAAA,OAAKU,IAAKD,EAAOE,QAAS,kBAAMN,EAAKF,YAAYM,KAC7CX,EAAAC,EAAAC,cAAA,UACKQ,EAAKI,KAAKC,OACPf,EAAAC,EAAAC,cAAA,OAAKc,IAAKN,EAAKI,KAAKC,MAAME,OAAQC,MAAO,CAACC,MAAO,UAEpDT,EAAKI,KAAKM,MAEfpB,EAAAC,EAAAC,cAAA,MAAIgB,MAAO,CAACG,eAAe,MAAOC,OAAO,kBAAmBC,eAAe,sBAxBxDC,IAAMrB,WCQlCsB,EARG,SAAC5C,GAEf,IAAI6C,EAAU7C,EAAMiC,KAAKC,MAAQlC,EAAMiC,KAAKC,MAAMY,SAAW,mEAC7D,OACI3B,EAAAC,EAAAC,cAAA,OAAKc,IAAKU,EAASR,MAAO,CAACC,MAAM,MAAOS,OAAO,UCsCxCC,EA1CK,SAAChD,GACjB,IAAIuC,EAAKvC,EAAMiC,KAAKM,KAOhBU,EAAc,gBACdjD,EAAMiC,KAAKiB,QAAWD,GAAejD,EAAMiC,KAAKiB,QAAQX,KAAOvC,EAAMiC,KAAKiB,QAAQX,KAAO,IAAM,MAAQvC,EAAMiC,KAAKiB,QAAQC,QAAQZ,KAAOvC,EAAMiC,KAAKiB,QAAQC,QAAQZ,KAAO,IAAM,IAC5KvC,EAAMiC,KAAKmB,aAAcH,EAAcjD,EAAMiC,KAAKmB,WAAWb,KAAKvC,EAAMiC,KAAKmB,WAAWb,KAAmDvC,EAAMiC,KAAKmB,WAAWD,QAAQZ,MAElL,IAAIc,EAAYrD,EAAMiC,KAAKoB,UACvBC,EAAOtD,EAAMiC,KAAKqB,KAClBC,EAAWvD,EAAMiC,KAAKsB,SACtBC,EAASxD,EAAMiC,KAAKuB,OACpBC,EAAezD,EAAMiC,KAAKwB,aAE1BC,EAAU1D,EAAMiC,KAAKyB,QACrBC,EAAQ3D,EAAMiC,KAAK2B,OAAOC,KAAK,MAEnC,OACI1C,EAAAC,EAAAC,cAAA,OAAKgB,MAAO,CAACC,MAAM,QACfnB,EAAAC,EAAAC,cAAA,UAAKkB,GACLpB,EAAAC,EAAAC,cAAA,UAAK4B,GACL9B,EAAAC,EAAAC,cAAA,OAAKyC,wBAAyB,CAACC,OAAQL,KAEvCvC,EAAAC,EAAAC,cAAA,WACCsC,EAAMK,OAAS,GAAK7C,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,qBAAgBsC,GACzCxC,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,mBAAciC,GAClBnC,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,uBAAkBkC,GACtBpC,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,wBAAmBgC,GACvBlC,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,qBAAgBmC,GAEpBrC,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,WACCoC,EAAiBtC,EAAAC,EAAAC,cAAA,KAAG4C,KAAMR,GAAT,uBAChBtC,EAAAC,EAAAC,cAAA,6CC8CH6C,cAhFX,SAAAA,EAAYlE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8D,IACfjE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgE,GAAA3D,KAAAH,KAAMJ,KACDmE,MAAQ,CAAEC,kBAAmB,MAElCnE,EAAKO,SAAWP,EAAKO,SAASC,KAAdP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAChBA,EAAKU,kBAAoBC,IAAEC,SAASZ,EAAKU,kBAAkBF,KAAvBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAAmC,KALxDA,wEASVa,GAELV,KAAKO,kBAAkBP,KAAKJ,MAAMqE,8CAGpBrD,GACdZ,KAAKa,OAAOD,kCAGTA,GAAO,IAAAU,EAAAtB,KACVkE,MAAK,+BAAAC,OAAgCvD,EAAhC,UACFwD,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAE,GAAI,OAAIhD,EAAKiD,SAAS,CAAEP,kBAAmBM,MAChDE,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,sCAgB5B,OAAKzE,KAAK+D,MAAMC,kBAOZhE,KAAK+D,MAAMC,kBAAkBJ,OAAO,EAEhC7C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQiC,KAAK,SAAStB,QAAS5B,KAAKI,UAApC,6BACAW,EAAAC,EAAAC,cAAA,wBAAgBjB,KAAK+D,MAAMC,kBAAkBJ,OAA7C,KACA7C,EAAAC,EAAAC,cAAA,OAAKgB,MAAO,CAAE2C,QAAQ,OAAQC,cAAgB,WAEtC7E,KAAK+D,MAAMC,kBAAkBxC,IAAI,SAACsD,EAAMC,GACpC,OACIhE,EAAAC,EAAAC,cAAA,OAAKU,IAAKoD,EAAG9C,MAAO,CAAE2C,QAAQ,OAAQC,cAAgB,QAClD9D,EAAAC,EAAAC,cAAA,OAAKc,IAAK+C,EAAKE,OAAOlD,MAAME,OAAQC,MAAO,CAACC,MAAM,MAAOS,OAAO,SAChE5B,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAK6D,EAAKE,OAAO7C,MACjBpB,EAAAC,EAAAC,cAAA,UAAK6D,EAAKG,UAAU9C,OAExBpB,EAAAC,EAAAC,cAAA,MAAIgB,MAAO,CAACG,eAAe,MAAOC,OAAO,kBAAmBC,eAAe,gBAWnGvB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQiC,KAAK,SAAStB,QAAS5B,KAAKI,UAApC,6BACAW,EAAAC,EAAAC,cAAA,mCAjCJF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQiC,KAAK,SAAStB,QAAS5B,KAAKI,UAApC,qCA1CGc,aCkDRgE,cA/CX,SAAAA,EAAYtF,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkF,IACdrF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoF,GAAA/E,KAAAH,KAAMJ,KACDmE,MAAM,CACPlD,OAAQ,KACRsE,qBAAsB,KACtBnB,kBAAmB,GACnBzC,cAAe,IAEnB1B,EAAKuF,iBAAmBvF,EAAKuF,iBAAiB/E,KAAtBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KARVA,yEAWRe,GAAO,IAAAU,EAAAtB,KACbkE,MAAK,sCAAAC,OAAuCnE,KAAKJ,MAAMiC,KAAKoC,GAAvD,UACFG,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAE,GAAI,OAAIhD,EAAKiD,SAAS,CAAEP,kBAAmBM,MAChDE,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,8CAGfY,GACbX,QAAQC,IAAI,0DAKZ,OACI5D,EAAAC,EAAAC,cAAA,OAAKgB,MAAO,CAAC2C,QAAQ,OAAQC,cAAgB,QACzC9D,EAAAC,EAAAC,cAACqE,EAAD,CAAWzD,KAAM7B,KAAKJ,MAAMiC,OAC5Bd,EAAAC,EAAAC,cAACsE,EAAD,CAAa1D,KAAM7B,KAAKJ,MAAMiC,OAC9Bd,EAAAC,EAAAC,cAACuE,EAAD,CAAUvB,GAAIjE,KAAKJ,MAAMiC,KAAKoC,GAAIrC,QAAS5B,KAAKoF,2BA7BtClE,aC0DXuE,cAxDb,SAAAA,EAAY7F,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyF,IAChB5F,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2F,GAAAtF,KAAAH,KAAMJ,KACDmE,MAAM,CACTlD,OAAQ,KACRsE,qBAAsB,KACtBnB,kBAAmB,GACnBzC,cAAe,IAEjB1B,EAAK6F,aAAe7F,EAAK6F,aAAarF,KAAlBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACpBA,EAAK8F,yBAA2B9F,EAAK8F,yBAAyBtF,KAA9BP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAThBA,4EAYLwF,GACXrF,KAAK4F,UAAUP,oDAGQzE,GAEvBZ,KAAKuE,SAAS,CACZ1D,OAAQ,oBACRsE,qBAAsBvE,sCAGhBA,GAAO,IAAAU,EAAAtB,KACfkE,MAAK,wCAAAC,OAAyCvD,IAC3CwD,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAE,GAAI,OAAIhD,EAAKiD,SAAS,CAAE1D,OAAQD,EAAOuE,qBAAsB,KAAM5D,cAAe+C,MACvFE,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,oCAGvB7D,GACHZ,KAAKJ,MAAMkB,eAAeF,oCAI5B,OACEG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAK4E,UAAU,kDAAkD5D,MAAO,CAAEC,MAAM,QAC9EnB,EAAAC,EAAAC,cAAA,OAAKgB,MAAO,CAACC,MAAM,QAASH,IAAI,uDAAuD+D,IAAI,KAC3F/E,EAAAC,EAAAC,cAAC8E,EAAD,CAAQC,MAAOhG,KAAK+D,MAAMiC,MAAOlF,eAAgBd,KAAK0F,eACtD3E,EAAAC,EAAAC,cAACgF,EAAD,CAAe1E,cAAevB,KAAK+D,MAAMxC,cAAeF,SAAUrB,KAAK2F,4BAGzE5E,EAAAC,EAAAC,cAAA,OAAKgB,MAAO,CAAEiE,WAAW,QACvBnF,EAAAC,EAAAC,cAAA,OAAK4E,UAAU,gBAEuB,OAApC7F,KAAK+D,MAAMoB,sBACTpE,EAAAC,EAAAC,cAACkF,EAAD,CAAatE,KAAO7B,KAAK+D,MAAMxC,cAAcvB,KAAK+D,MAAMoB,sBAAsBtD,iBAhD1EX,aCFlBkF,IAASC,OAAOtF,EAAAC,EAAAC,cAACqF,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.3a2d8085.chunk.js","sourcesContent":["import _ from 'lodash';\r\nimport React, { Component } from 'react';\r\n \r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n \r\n    this.onChange = this.onChange.bind(this); // binding this because onChange is called in another scope\r\n    this.debouncedOnChange = _.debounce(this.debouncedOnChange.bind(this), 200); // debouncing function to 200ms and binding this\r\n    // this.handleChange = this.handleChange.bind(this)\r\n  }  \r\n \r\n  onChange(event) {\r\n    this.debouncedOnChange(event.target.value); // sending only the values not the entire event\r\n  }\r\n \r\n  debouncedOnChange(value) {\r\n    this.search(value); // perform a search only once every 200ms\r\n  }\r\n\r\n  search(value) {\r\n    this.props.onSearchChange(value)\r\n  }\r\n\r\n//   search = async (value) => {\r\n//     const api_url = `http://api.tvmaze.com/search/shows?q=${value}`\r\n//     const api_call = await fetch(api_url)\r\n//     const data = await api_call.json()\r\n\r\n//     data.sort()\r\n\r\n//     console.log('from search - data', data) //\r\n//     this.props.onSearchChange(data)\r\n//   }\r\n \r\n  render() {\r\n    return (\r\n      <div>\r\n        <input onChange={this.onChange} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Search;\r\n\r\n//   fetchData(value) {\r\n//     fetch(`http://api.tvmaze.com/search/shows?q=${value}`)\r\n//       .then(res => res.json())\r\n//       .then((data) => {\r\n//           this.setState({\r\n//               search: value,\r\n//               shows: data\r\n//           })\r\n//       })\r\n//   }\r\n\r\n//   search(value) {\r\n//       this.props.onSearchChange(value)\r\n//   }\r\n","import React from 'react';\r\n\r\nexport default class SearchResults extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        // this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n    // handleClick(e) {\r\n    //     console.log(e.target)\r\n    // }\r\n    handleClick = (value) => {\r\n        this.props.onSelect(value)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.searchResults.map((item, index) => \r\n                    <div key={index} onClick={() => this.handleClick(index)} >\r\n                        <li>\r\n                            {item.show.image && \r\n                                <img src={item.show.image.medium} style={{width: '30px'}}  /> \r\n                            }\r\n                            {item.show.name}\r\n                        </li>\r\n                        <hr style={{\"border-width\":\"1px\", margin:\"0.5em 0 0.5em 0\", \"border-style\":\"inset\"}} />\r\n                    </div>)\r\n                }\r\n            </div>\r\n\r\n        )        \r\n    }\r\n}\r\n\r\n","import React from 'react';\n\nconst ShowImage = (props) => {\n\n    let imgpath = props.show.image ? props.show.image.original : 'https://static.tvmaze.com/images/no-img/no-img-portrait-text.png'\n    return (\n        <img src={imgpath} style={{width:'30%', height:\"30%\"}} /> \n    )\n}\n\nexport default ShowImage","import React from 'react';\n\nconst ShowDetails = (props) => {\n    let name=props.show.name\n    // let networkName = props.show.network.name ? props.show.network.name : '' + props.show.network.country.name ? props.show.network.country.name : ''\n    // let networkName = props.show.network ? props.show.network.name + props.show.network.country.name : 'Not available'\n    // let networkName = props.show.webChannel.name + '(' + props.show.webChannel.country.name + ')'\n    // let webchannel = props.show.webchannel\n\n    // Sometimes, either show.network & show.webChannel could be null, thus crash.\n    let networkName = \"Not available\"\n    if (props.show.network) { networkName = (props.show.network.name ? props.show.network.name : '') + ' (' + (props.show.network.country.name ? props.show.network.country.name : '') + ')'}\n    else if (props.show.webChannel) { networkName = props.show.webChannel.name?props.show.webChannel.name:'' + '(' + props.show.webChannel.country.name?props.show.webChannel.country.name:'' + ')' }\n\n    let premiered = props.show.premiered\n    let type = props.show.type\n    let language = props.show.language\n    let status = props.show.status\n    let officialSite = props.show.officialSite\n\n    let summary = props.show.summary\n    let genre = props.show.genres.join(\", \")\n\n    return (\n        <div style={{width:'35%'}}>\n            <h2>{name}</h2>\n            <h3>{networkName}</h3>\n            <div dangerouslySetInnerHTML={{__html: summary}} />\n            {/* <h3>{summary}</h3> */}\n            <br />\n            {genre.length > 0 && <h5><b>Genres: </b>{genre}</h5>}\n            <h5><b>Type: </b>{type}</h5>\n            <h5><b>Language: </b>{language}</h5>\n            <h5><b>Premiered: </b>{premiered}</h5>\n            <h5><b>Status: </b>{status}</h5>\n\n            <h5><div>\n                {officialSite ? ( <a href={officialSite}>Visit Official Site</a> ) : \n                ( <h3>Official site not available</h3> )}\n            </div></h5>\n        </div>\n    )\n}\n\nexport default ShowDetails;\n","import React, {Component} from 'react';\nimport _ from 'lodash';\n\nclass CastList extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { searchResultsCast: null }\n     \n        this.onChange = this.onChange.bind(this); // binding this because onChange is called in another scope\n        this.debouncedOnChange = _.debounce(this.debouncedOnChange.bind(this), 200); // debouncing function to 200ms and binding this\n        // this.handleChange = this.handleChange.bind(this)\n    }  \n     \n    onChange(event) {\n        // this.debouncedOnChange(event.target.value); // sending only the values not the entire event\n        this.debouncedOnChange(this.props.id);\n    }\n    \n    debouncedOnChange(value) {\n        this.search(value); // perform a search only once every 200ms\n    }\n\n    search(value) {\n        fetch(`http://api.tvmaze.com/shows/${value}/cast`)\n          .then(res => res.json())\n          .then(json => this.setState({ searchResultsCast: json }))\n          .catch(err => console.log(err))\n    }\n\n    // see if I can fetch the castlist within this component.\n    // fetchCast(id) {\n    //     fetch(`http://api.tvmaze.com/shows/${id}/cast`)\n    //       .then(res => res.json())\n    //       .then(json => this.setState({ searchResultsCast: json }))\n    //       .catch(err => console.log(err))\n\n    //     console.log('reached fetchCast within CastList!')\n    //     console.log(this.state.searchResultsCast? this.state.searchResultsCast:'Not Yet')\n    // }\n\n    //Try to use conditional rendering, because of the <button> \n    render() {\n        if (!this.state.searchResultsCast) {\n            return (\n                <div>\n                    <button type=\"button\" onClick={this.onChange}>Retrieve Cast Information</button>\n                </div>\n            )\n        } else   \n        if (this.state.searchResultsCast.length>0) {\n            return (\n                <div>\n                    <button type=\"button\" onClick={this.onChange}>Retrieve Cast Information</button>\n                    <h3>Cast List ({this.state.searchResultsCast.length})</h3>\n                    <div style={{ display:\"flex\", \"flexDirection\":\"column\" }}>\n                        {\n                            this.state.searchResultsCast.map((cast, i) => {\n                                return (\n                                    <div key={i} style={{ display:\"flex\", \"flexDirection\":\"row\" }}>\n                                        <img src={cast.person.image.medium} style={{width:\"30%\", height:\"30%\"}}></img>\n                                        <ul>\n                                            <li>{cast.person.name}</li>\n                                            <li>{cast.character.name}</li>\n                                        </ul>\n                                        <hr style={{\"border-width\":\"1px\", margin:\"0.5em 0 0.5em 0\", \"border-style\":\"inset\"}} />                                    \n                                    </div>                               \n                                )\n                            })\n                        }\n                    </div>\n                </div>\n            )\n        } else \n        {\n            return (\n                <div>\n                    <button type=\"button\" onClick={this.onChange}>Retrieve Cast Information</button>\n                    <p>No CastInfo Available</p>\n                </div>\n            )\n        }\n    }\n}\n\nexport default CastList","import React, {Component} from 'react';\nimport ShowImage from './ShowImage';\nimport ShowDetails from './ShowDetails';\nimport CastList from './CastList';\n\nclass ShowDisplay extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            search: null,\n            selectedSearchResult: null,\n            searchResultsCast: [], //added for cast retrieval\n            searchResults: []\n        }\n        this.handleCastButton = this.handleCastButton.bind(this)\n    }\n\n    fetchCast(value) {\n        fetch(`http://api.tvmaze.com/search/shows/${this.props.show.id}/cast`) //originally, ${value}\n          .then(res => res.json())\n          .then(json => this.setState({ searchResultsCast: json }))\n          .catch(err => console.log(err))\n    }\n\n    handleCastButton(e) {\n        console.log('from handleCastButton') //debug\n        // this.fetchCast(e)\n    }\n\n    render() {\n        return (\n            <div style={{display:\"flex\", \"flexDirection\":\"row\"}}>\n                <ShowImage show={this.props.show} />\n                <ShowDetails show={this.props.show} />\n                <CastList id={this.props.show.id} onClick={this.handleCastButton} />\n            </div>  \n        )\n    } // end of render()\n}\n\n\n// const ShowDisplay = (props) => {\n\n\n//     return (\n//         <div style={{display:\"flex\", \"flexDirection\":\"row\"}}>\n//             <ShowImage show={props.show} />\n//             <ShowDetails show={props.show} />\n//             <CastList id={props.show.id} onClick={this.handleCastButton} />\n//         </div>   \n//     )\n// }\n\nexport default ShowDisplay\n\n","import React, { Component } from 'react';\nimport './w3.css';\nimport Search from './components/Search'\nimport SearchResults from './components/SearchResults'\nimport ShowDisplay from './components/ShowDisplay'\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state={\n      search: null,\n      selectedSearchResult: null,\n      searchResultsCast: [], //added for cast retrieval\n      searchResults: []\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSearchResultSelect = this.handleSearchResultSelect.bind(this)\n  }\n\n  handleChange(e) {\n    this.fetchData(e)\n  }\n\n  handleSearchResultSelect(value) {\n    //when click on each show in the search results lists\n    this.setState({ \n      search: 'this.state.search',\n      selectedSearchResult: value})\n  }\n\n  fetchData(value) {\n    fetch(`http://api.tvmaze.com/search/shows?q=${value}`)\n      .then(res => res.json())\n      .then(json => this.setState({ search: value, selectedSearchResult: null, searchResults: json }))\n      .catch(err => console.log(err))\n  }\n\n  search(value) {\n      this.props.onSearchChange(value)\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"w3-sidebar w3-light-grey w3-bar-block w3-card-4\" style={{ width:'20%' }}>\n          <img style={{width:'100%'}} src=\"https://static.tvmaze.com/images/tvm-header-logo.png\" alt='' />\n          <Search shows={this.state.shows} onSearchChange={this.handleChange} />\n          <SearchResults searchResults={this.state.searchResults} onSelect={this.handleSearchResultSelect} />\n        </div>         \n\n        <div style={{ marginLeft:'20%' }}>\n          <div className=\"w3-container\">\n            {\n            this.state.selectedSearchResult !== null &&\n              <ShowDisplay show={ this.state.searchResults[this.state.selectedSearchResult].show } />\n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}